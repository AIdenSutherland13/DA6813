vif(lin.model5) #Remove next_weeks_close
lin.model6 = lm(percent_change_next_weeks_price ~ . -close -high -next_weeks_open -low -open -next_weeks_close, data = dow)
vif(lin.model6) #Remove percent_return_next_dividend
lin.model7 = lm(percent_change_next_weeks_price ~ . -close -high -next_weeks_open -low -open -next_weeks_close -percent_return_next_dividend, data = dow)
vif(lin.model7) #all vifs<5
#Remove variables from data set
dow = subset(dow, select = -c(close, high, next_weeks_open, low, open, next_weeks_close, percent_return_next_dividend))
#Box plots of variables
grid.arrange(ggplot(dow, aes(volume)) + geom_boxplot(),
ggplot(dow, aes(percent_change_price)) + geom_boxplot(),
ggplot(dow, aes(percent_change_volume_over_last_wk)) + geom_boxplot(),
ggplot(dow, aes(previous_weeks_volume)) + geom_boxplot(),
ggplot(dow, aes(percent_change_next_weeks_price)) + geom_boxplot(),
ggplot(dow, aes(days_to_next_dividend)) + geom_boxplot(),
ncol = 2,
bottom = 'Figure X.X: Boxplots of Numerical Values')
dow_norm = lapply(dow[,c(4:9)], yeojohnson) #normalize numeric data
#scale function just changed the scale, it was still skewed. log and sqrt gave errors to ended up with "yeojohnson." Appears to work well!
dow_norm1 = cbind(dow[,1:3], volume = dow_norm$volume$x.t, percent_change_price = dow_norm$percent_change_price$x.t,
percent_change_volume_over_last_wk = dow_norm$percent_change_volume_over_last_wk$x.t,
previous_weeks_volume = dow_norm$previous_weeks_volume$x.t, percent_change_next_weeks_price =
dow_norm$percent_change_next_weeks_price$x.t, days_to_next_dividend = dow_norm$days_to_next_dividend$x.t ) #combine factor data with normalized data and leaving out the index column ("observation")
grid.arrange(ggplot(dow_norm1, aes(volume)) + geom_boxplot(),
ggplot(dow_norm1, aes(percent_change_price)) + geom_boxplot(),
ggplot(dow_norm1, aes(percent_change_volume_over_last_wk)) + geom_boxplot(),
ggplot(dow_norm1, aes(previous_weeks_volume)) + geom_boxplot(),
ggplot(dow_norm1, aes(percent_change_next_weeks_price)) + geom_boxplot(),
ggplot(dow_norm1, aes(days_to_next_dividend)) + geom_boxplot(),
ncol = 2,
bottom = 'Figure X.X: Boxplots of Numerical Values')
#Split into train & test data sets
#Per the case study, quarter 1 will be used as the training data set and quarter 2 will be test data set
dow_train = dow_norm1[dow_norm1$quarter==1,]
dow_test = dow_norm1[dow_norm1$quarter==2,]
#FOR LOOP to run each model on different stocks
stocks <- unique(dow$stock) #create vector of stock names
rmse = function(predicted, actual) {
sqrt(mean((predicted-actual)^2))
}
results = data.frame(Stock = character(), RMSE = numeric(), stringsAsFactors = FALSE) #create an empty data frame to fill,
for (stock in stocks) {
#Filter data sets based on stock
dow_train_stock = dow_train[dow_train$stock == stock,]
dow_train_stock = dow_train_stock %>% dplyr::select(-stock)
dow_test_stock = dow_test[dow_test$stock == stock,]
dow_test_stock = dow_test_stock %>%  dplyr::select(-stock)
#Fit models on training data set
model = glm(percent_change_next_weeks_price ~ . , data = dow_train_stock)
#Predict on test data
dow_test_stock$PredPercentChange = predict(model, newdata = dow_test_stock, type = "response")
#Performance metric
rmse_value = rmse(dow_test_stock$PredPercentChange, dow_test_stock$percent_change_next_weeks_price)
#Store performance in data table
results = rbind(results, data.frame(Stock = stock, RMSE = rmse_value)) #add onto previous data or empty df.
}
print(results)
capm_results = data.frame(Stock = character(), Beta_coef = numeric(), stringsAsFactors = FALSE) #create an empty data frame to fill
for (i in unique(dow$stock)) {
# filter data for individual stocks
dow_stock = dow %>%
dplyr::filter(dow$stock == i) %>%
dplyr::select(percent_change_next_weeks_price)
sp500_data = sp500 %>%
dplyr::select(percent_change_next_weeks_price)
capm_data = cbind(sp500_data, dow_stock)
colnames(capm_data) = c("SP500", "Stock")
# Model
lm_model = lm(Stock ~ SP500, data = as.data.frame(capm_data))
beta_coef <- summary(lm_model)$coefficients[2, 1]
# Store beta coefficients in data table
capm_results = capm_results %>%
rbind(data.frame(Stock = i, Beta_coef = beta_coef))
}
print(capm_results)
capm_results = capm_results %>%
arrange(Beta_coef)
print(capm_results)
capm_results = capm_results %>%
arrange(desc(Beta_coef))
print(capm_results)
install.packages("gt")
pacman::p_load(caret, lattice, tidyverse, gam, logistf, MASS,
car, corrplot, gridExtra, ROCR, RCurl, randomForest,
readr, readxl, e1071, klaR, bestNormalize, rpart, lubridate,
tseries, quantmod, gt)
pacman::p_load(caret, lattice, tidyverse, gam, logistf, MASS,
car, corrplot, gridExtra, ROCR, RCurl, randomForest,
readr, readxl, e1071, klaR, bestNormalize, rpart, lubridate,
tseries, quantmod, gt)
print(capm_results)
setwd("C:/Users/mach1/OneDrive - University of Texas at San Antonio/MSDA/2024Fall/DA6813/DA6813")
# Libraries
pacman::p_load(caret, lattice, tidyverse, gam, logistf, MASS,
car, corrplot, gridExtra, ROCR, RCurl, randomForest,
readr, readxl, e1071, klaR, bestNormalize, rpart, lubridate,
tseries, quantmod, knitr, SMCRM)
# Data
data(acquisitionRetention)
crm = acquisitionRetention
## EDA
str(crm)
fac_vars = c('acquisition', 'industry')
crm[fac_vars] = lapply(crm[fac_vars],as.factor)
crm = crm %>%
dplyr::select(-customer)
crm_dur = crm %>%
filter(acquisition == 1) %>% # filter out unacquired customers
dplyr::select(-c(acquisition, freq, freq_sq, crossbuy))
which(is.na(crm))
#### acquisition
crm %>%
ggplot(aes(acquisition)) +
geom_bar()
crm_dur %>%
ggplot(aes(duration)) +
geom_histogram(bins = 30)
str(crm)
grid.arrange(
ggplot(crm, aes(acquisition, duration)) + geom_boxplot()
)
grid.arrange(
ggplot(crm, aes(acquisition, duration)) + geom_boxplot(),
ggplot(crm, aes(acquisition, profit)) + geom_boxplot(),
ggplot(crm, aes(acquisition, acq_exp)) + geom_boxplot(),
ggplot(crm, aes(acquisition, ret_exp)) + geom_boxplot(),
ggplot(crm, aes(acquisition, freq)) + geom_boxplot(),
ggplot(crm, aes(acquisition, freq_sq)) + geom_boxplot(),
ggplot(crm, aes(acquisition, crossbuy)) + geom_boxplot(),
ggplot(crm, aes(acquisition, sow)) + geom_boxplot(),
ggplot(crm, aes(acquisition, industry)) + geom_boxplot(),
ggplot(crm, aes(acquisition, revenue)) + geom_boxplot(),
ggplot(crm, aes(acquisition, employees)) + geom_boxplot(),
ncol = 6,
bottom = 'Figure X.X: Boxplots of Numerical Values'
)
grid.arrange(
ggplot(crm, aes(acquisition, duration)) + geom_boxplot(),
ggplot(crm, aes(acquisition, profit)) + geom_boxplot(),
ggplot(crm, aes(acquisition, acq_exp)) + geom_boxplot(),
ggplot(crm, aes(acquisition, ret_exp)) + geom_boxplot(),
ggplot(crm, aes(acquisition, freq)) + geom_boxplot(),
ggplot(crm, aes(acquisition, freq_sq)) + geom_boxplot(),
ggplot(crm, aes(acquisition, crossbuy)) + geom_boxplot(),
ggplot(crm, aes(acquisition, sow)) + geom_boxplot(),
ggplot(crm, aes(acquisition, revenue)) + geom_boxplot(),
ggplot(crm, aes(acquisition, employees)) + geom_boxplot(),
ncol = 5,
bottom = 'Figure X.X: Boxplots of Numerical Values'
)
grid.arrange(
ggplot(crm, aes(acquisition, duration)) + geom_boxplot(),
ggplot(crm, aes(acquisition, profit)) + geom_boxplot(),
ggplot(crm, aes(acquisition, acq_exp)) + geom_boxplot(),
ggplot(crm, aes(acquisition, ret_exp)) + geom_boxplot(),
ggplot(crm, aes(acquisition, freq)) + geom_boxplot(),
ggplot(crm, aes(acquisition, freq_sq)) + geom_boxplot(),
ggplot(crm, aes(acquisition, crossbuy)) + geom_boxplot(),
ggplot(crm, aes(acquisition, sow)) + geom_boxplot(),
ggplot(crm, aes(acquisition, revenue)) + geom_boxplot(),
ggplot(crm, aes(acquisition, employees)) + geom_boxplot(),
ncol = 5,
bottom = 'Figure X.X: Boxplots of Numerical Values'
)
grid.arrange(
ggplot(crm, aes(acquisition, duration)) + geom_boxplot(),
ggplot(crm, aes(acquisition, profit)) + geom_boxplot(),
ggplot(crm, aes(acquisition, acq_exp)) + geom_boxplot(),
ggplot(crm, aes(acquisition, ret_exp)) + geom_boxplot(),
ggplot(crm, aes(acquisition, freq)) + geom_boxplot(),
ggplot(crm, aes(acquisition, freq_sq)) + geom_boxplot(),
ggplot(crm, aes(acquisition, crossbuy)) + geom_boxplot(),
ggplot(crm, aes(acquisition, sow)) + geom_boxplot(),
ggplot(crm, aes(acquisition, revenue)) + geom_boxplot(),
ggplot(crm, aes(acquisition, employees)) + geom_boxplot(),
ggplot(crm, aes(acquisition, industry)) + geom_bar(),
ncol = 5,
bottom = 'Figure X.X: Plots of predictor relationship with acquisition response'
)
ggplot(crm, aes(acquisition, count) + geom_bar(aes(fill = industry)),
grid.arrange(
grid.arrange(
ggplot(crm, aes(acquisition, duration)) + geom_boxplot(),
ggplot(crm, aes(acquisition, profit)) + geom_boxplot(),
ggplot(crm, aes(acquisition, acq_exp)) + geom_boxplot(),
ggplot(crm, aes(acquisition, ret_exp)) + geom_boxplot(),
ggplot(crm, aes(acquisition, freq)) + geom_boxplot(),
ggplot(crm, aes(acquisition, freq_sq)) + geom_boxplot(),
ggplot(crm, aes(acquisition, crossbuy)) + geom_boxplot(),
ggplot(crm, aes(acquisition, sow)) + geom_boxplot(),
ggplot(crm, aes(acquisition, revenue)) + geom_boxplot(),
ggplot(crm, aes(acquisition, employees)) + geom_boxplot(),
ggplot(crm, aes(acquisition, count) + geom_bar(aes(fill = industry)),
ncol = 5,
bottom = 'Figure X.X: Plots of predictor relationship with acquisition response'
)
grid.arrange(
grid.arrange(
ggplot(crm, aes(acquisition, duration)) + geom_boxplot(),
ggplot(crm, aes(acquisition, profit)) + geom_boxplot(),
ggplot(crm, aes(acquisition, acq_exp)) + geom_boxplot(),
ggplot(crm, aes(acquisition, ret_exp)) + geom_boxplot(),
ggplot(crm, aes(acquisition, freq)) + geom_boxplot(),
ggplot(crm, aes(acquisition, freq_sq)) + geom_boxplot(),
ggplot(crm, aes(acquisition, crossbuy)) + geom_boxplot(),
ggplot(crm, aes(acquisition, sow)) + geom_boxplot(),
ggplot(crm, aes(acquisition, revenue)) + geom_boxplot(),
ggplot(crm, aes(acquisition, employees)) + geom_boxplot(),
ggplot(crm, aes(acquisition, count)) + geom_bar(aes(fill = industry)),
ncol = 5,
bottom = 'Figure X.X: Plots of predictor relationship with acquisition response'
)
grid.arrange(
ggplot(crm, aes(acquisition, duration)) + geom_boxplot(),
ggplot(crm, aes(acquisition, profit)) + geom_boxplot(),
ggplot(crm, aes(acquisition, acq_exp)) + geom_boxplot(),
ggplot(crm, aes(acquisition, ret_exp)) + geom_boxplot(),
ggplot(crm, aes(acquisition, freq)) + geom_boxplot(),
ggplot(crm, aes(acquisition, freq_sq)) + geom_boxplot(),
ggplot(crm, aes(acquisition, crossbuy)) + geom_boxplot(),
ggplot(crm, aes(acquisition, sow)) + geom_boxplot(),
ggplot(crm, aes(acquisition, revenue)) + geom_boxplot(),
ggplot(crm, aes(acquisition, employees)) + geom_boxplot(),
ggplot(crm, aes(acquisition, ..count..)) + geom_bar(aes(fill = industry)),
ncol = 5,
bottom = 'Figure X.X: Plots of predictor relationship with acquisition response'
)
grid.arrange(
ggplot(crm, aes(acquisition, duration)) + geom_boxplot(),
ggplot(crm, aes(acquisition, profit)) + geom_boxplot(),
ggplot(crm, aes(acquisition, acq_exp)) + geom_boxplot(),
ggplot(crm, aes(acquisition, ret_exp)) + geom_boxplot(),
ggplot(crm, aes(acquisition, freq)) + geom_boxplot(),
ggplot(crm, aes(acquisition, freq_sq)) + geom_boxplot(),
ggplot(crm, aes(acquisition, crossbuy)) + geom_boxplot(),
ggplot(crm, aes(acquisition, sow)) + geom_boxplot(),
ggplot(crm, aes(acquisition, revenue)) + geom_boxplot(),
ggplot(crm, aes(acquisition, employees)) + geom_boxplot(),
ggplot(crm, aes(acquisition, after_stat(count))) + geom_bar(aes(fill = industry)),
ncol = 5,
bottom = 'Figure X.X: Plots of predictor relationship with acquisition response'
)
grid.arrange(
ggplot(crm, aes(acquisition, duration)) + geom_boxplot(),
ggplot(crm, aes(acquisition, profit)) + geom_boxplot(),
ggplot(crm, aes(acquisition, acq_exp)) + geom_boxplot(),
ggplot(crm, aes(acquisition, ret_exp)) + geom_boxplot(),
ggplot(crm, aes(acquisition, freq)) + geom_boxplot(),
ggplot(crm, aes(acquisition, freq_sq)) + geom_boxplot(),
ggplot(crm, aes(acquisition, crossbuy)) + geom_boxplot(),
ggplot(crm, aes(acquisition, sow)) + geom_boxplot(),
ggplot(crm, aes(acquisition, revenue)) + geom_boxplot(),
ggplot(crm, aes(acquisition, employees)) + geom_boxplot(),
ggplot(crm, aes(acquisition, after_stat(count))) + geom_bar(aes(fill = industry), position = 'dodge'),
ncol = 5,
bottom = 'Figure X.X: Plots of predictor relationship with acquisition response'
)
ggplot(crm, aes(acquisition, after_stat(count))) + geom_bar(aes(fill = industry))
ggplot(crm, aes(acquisition, after_stat(count))) + geom_bar(aes(fill = industry), position = 'dodge')
grid.arrange(
ggplot(crm, aes(acquisition, duration)) + geom_boxplot(),
ggplot(crm, aes(acquisition, profit)) + geom_boxplot(),
ggplot(crm, aes(acquisition, acq_exp)) + geom_boxplot(),
ggplot(crm, aes(acquisition, ret_exp)) + geom_boxplot(),
ggplot(crm, aes(acquisition, freq)) + geom_boxplot(),
ggplot(crm, aes(acquisition, freq_sq)) + geom_boxplot(),
ggplot(crm, aes(acquisition, crossbuy)) + geom_boxplot(),
ggplot(crm, aes(acquisition, sow)) + geom_boxplot(),
ggplot(crm, aes(acquisition, revenue)) + geom_boxplot(),
ggplot(crm, aes(acquisition, employees)) + geom_boxplot(),
ggplot(crm, aes(acquisition, after_stat(count))) + geom_bar(aes(fill = industry), position = 'dodge'),
ncol = 5,
bottom = 'Figure X.X: Plots of predictor relationship with acquisition response'
)
grid.arrange(
ggplot(crm, aes(acquisition, duration)) + geom_boxplot(),
ggplot(crm, aes(acquisition, profit)) + geom_boxplot(),
ggplot(crm, aes(acquisition, acq_exp)) + geom_boxplot(),
ggplot(crm, aes(acquisition, ret_exp)) + geom_boxplot(),
ggplot(crm, aes(acquisition, freq)) + geom_boxplot(),
ggplot(crm, aes(acquisition, freq_sq)) + geom_boxplot(),
ggplot(crm, aes(acquisition, crossbuy)) + geom_boxplot(),
ggplot(crm, aes(acquisition, sow)) + geom_boxplot(),
ggplot(crm, aes(acquisition, revenue)) + geom_boxplot(),
ggplot(crm, aes(acquisition, employees)) + geom_boxplot(),
ggplot(crm, aes(acquisition, after_stat(count))) + geom_bar(aes(fill = industry), position = 'dodge'),
ncol = 6,
bottom = 'Figure X.X: Plots of predictor relationship with acquisition response'
)
grid.arrange(
ggplot(crm, aes(acquisition, duration)) + geom_boxplot(),
ggplot(crm, aes(acquisition, profit)) + geom_boxplot(),
ggplot(crm, aes(acquisition, acq_exp)) + geom_boxplot(),
ggplot(crm, aes(acquisition, ret_exp)) + geom_boxplot(),
ggplot(crm, aes(acquisition, freq)) + geom_boxplot(),
ggplot(crm, aes(acquisition, freq_sq)) + geom_boxplot(),
ggplot(crm, aes(acquisition, crossbuy)) + geom_boxplot(),
ggplot(crm, aes(acquisition, sow)) + geom_boxplot(),
ggplot(crm, aes(acquisition, revenue)) + geom_boxplot(),
ggplot(crm, aes(acquisition, employees)) + geom_boxplot(),
ggplot(crm, aes(acquisition, after_stat(count))) + geom_bar(aes(fill = industry), position = 'dodge'),
ncol = 5,
bottom = 'Figure X.X: Plots of predictor relationship with acquisition response'
)
grid.arrange(
ggplot(crm, aes(acquisition, duration)) + geom_boxplot(),
ggplot(crm, aes(acquisition, profit)) + geom_boxplot(),
ggplot(crm, aes(acquisition, acq_exp)) + geom_boxplot(),
ggplot(crm, aes(acquisition, ret_exp)) + geom_boxplot(),
ggplot(crm, aes(acquisition, freq)) + geom_boxplot(),
ggplot(crm, aes(acquisition, freq_sq)) + geom_boxplot(),
ggplot(crm, aes(acquisition, crossbuy)) + geom_boxplot(),
ggplot(crm, aes(acquisition, sow)) + geom_boxplot(),
ggplot(crm, aes(acquisition, revenue)) + geom_boxplot(),
ggplot(crm, aes(acquisition, employees)) + geom_boxplot(),
ncol = 5,
bottom = 'Figure X.X: Plots of predictor relationship with acquisition response'
)
ggplot(crm, aes(acquisition, after_stat(count))) + geom_bar(aes(fill = industry), position = 'dodge')
ggplot(crm, aes(x = duration, y = acquisition, color = acquisition)) + geom_point()
str(crm)
crm_dur = crm %>%
filter(acquisition == 1) # filter out unacquired customers
### Viz features - Duration
grid.arrange(
ggplot(crm_dur, aes(x = duration, y = acquisition, color = acquisition)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = profit, color = acquisition)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = acq_exp, color = acquisition)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = ret_exp, color = acquisition)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = acq_exp_sq, color = acquisition)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = ret_exp_sq, color = acquisition)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = freq, color = acquisition)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = freq_sq, color = acquisition)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = crossbuy, color = acquisition)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = sow, color = acquisition)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = revenue, color = acquisition)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = employees, color = acquisition)) + geom_point(),
)
### Viz features - Duration
grid.arrange(
ggplot(crm_dur, aes(x = duration, y = acquisition, color = acquisition)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = profit, color = acquisition)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = acq_exp, color = acquisition)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = ret_exp, color = acquisition)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = acq_exp_sq, color = acquisition)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = ret_exp_sq, color = acquisition)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = freq, color = acquisition)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = freq_sq, color = acquisition)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = crossbuy, color = acquisition)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = sow, color = acquisition)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = revenue, color = acquisition)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = employees, color = acquisition)) + geom_point()
)
### Viz features - Duration
grid.arrange(
ggplot(crm_dur, aes(x = duration, y = acquisition)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = profit)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = acq_exp)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = ret_exp)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = acq_exp_sq)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = ret_exp_sq)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = freq)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = freq_sq)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = crossbuy)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = sow)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = revenue)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = employees)) + geom_point()
)
grid.arrange(
ggplot(crm, aes(acquisition, duration)) + geom_boxplot(),
ggplot(crm, aes(acquisition, profit)) + geom_boxplot(),
ggplot(crm, aes(acquisition, acq_exp)) + geom_boxplot(),
ggplot(crm, aes(acquisition, ret_exp)) + geom_boxplot(),
ggplot(crm, aes(acquisition, freq)) + geom_boxplot(),
ggplot(crm, aes(acquisition, freq_sq)) + geom_boxplot(),
ggplot(crm, aes(acquisition, crossbuy)) + geom_boxplot(),
ggplot(crm, aes(acquisition, sow)) + geom_boxplot(),
ggplot(crm, aes(acquisition, revenue)) + geom_boxplot(),
ggplot(crm, aes(acquisition, employees)) + geom_boxplot(),
ggplot(crm, aes(acquisition, after_stat(count))) + geom_bar(aes(fill = industry), position = 'dodge')
bottom = 'Figure X.X: Plots of predictor relationship with acquisition response'
grid.arrange(
ggplot(crm, aes(acquisition, duration)) + geom_boxplot(),
ggplot(crm, aes(acquisition, profit)) + geom_boxplot(),
ggplot(crm, aes(acquisition, acq_exp)) + geom_boxplot(),
ggplot(crm, aes(acquisition, ret_exp)) + geom_boxplot(),
ggplot(crm, aes(acquisition, freq)) + geom_boxplot(),
ggplot(crm, aes(acquisition, freq_sq)) + geom_boxplot(),
ggplot(crm, aes(acquisition, crossbuy)) + geom_boxplot(),
ggplot(crm, aes(acquisition, sow)) + geom_boxplot(),
ggplot(crm, aes(acquisition, revenue)) + geom_boxplot(),
ggplot(crm, aes(acquisition, employees)) + geom_boxplot(),
ggplot(crm, aes(acquisition, after_stat(count))) + geom_bar(aes(fill = industry), position = 'dodge'),
bottom = 'Figure X.X: Plots of predictor relationship with acquisition response'
)
### Viz features - Duration
grid.arrange(
ggplot(crm_dur, aes(x = duration, y = acquisition)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = profit)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = acq_exp)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = ret_exp)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = acq_exp_sq)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = ret_exp_sq)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = freq)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = freq_sq)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = crossbuy)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = sow)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = revenue)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = employees)) + geom_point(),
ggplot(crm_dur, aes(industry, duration)) + geom_boxplot()
)
### Create acquisition data set with perfect predictors removed
crm_acq = crm %>%
dplyr::select(-c(duration, ret_exp, freq, freq_sq, crossbuy, sow))
dplyr::select(-c(acquisition))
crm_dur = crm %>%
filter(acquisition == 1) %>% # filter out unacquired customers
dplyr::select(-c(acquisition))
### Viz features - Duration
grid.arrange(
ggplot(crm_dur, aes(x = duration, y = profit)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = acq_exp)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = ret_exp)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = acq_exp_sq)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = ret_exp_sq)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = freq)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = freq_sq)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = crossbuy)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = sow)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = revenue)) + geom_point(),
ggplot(crm_dur, aes(x = duration, y = employees)) + geom_point(),
ggplot(crm_dur, aes(industry, duration)) + geom_boxplot(),
bottom = 'Figure X.X: Plots of predictor relationship with duration response'
)
#### acquisition
crm %>%
ggplot(aes(acquisition)) +
geom_bar()
#### acquisition
crm_acq %>%
ggplot(aes(acquisition)) +
geom_bar()
crm_dur %>%
ggplot(aes(duration)) +
geom_histogram(bins = 30)
corrplot::corrplot(cor(crm_acq), method = c("number"))
View(crm_acq)
corrplot::corrplot(cor(crm_acq[,-c(6)]), method = c("number"))
str(crm_acq)
corrplot::corrplot(cor(crm_acq[,-c(1,6)]), method = c("number"))
corrplot::corrplot(cor(crm_acq[,-c(1,6)]))
acq.model = lm(acquisition ~ ., data = crm_acq)
vif(lm(acquisition ~ ., data = crm_acq))
View(crm_dur)
corrplot::corrplot(cor(crm_dur[,-c(11)]))
str(crm)
grid.arrange(
ggplot(aes(profit)) + geom_histogram(bins = 30),
ggplot(aes(acq_exp)) + geom_histogram(bins = 30),
ggplot(aes(ret_exp)) + geom_histogram(bins = 30),
ggplot(aes(acq_exp_sq)) + geom_histogram(bins = 30),
ggplot(aes(ret_exp_sq)) + geom_histogram(bins = 30),
ggplot(aes(freq)) + geom_histogram(bins = 30),
ggplot(aes(freq_sq)) + geom_histogram(bins = 30),
ggplot(aes(crossbuy)) + geom_histogram(bins = 30),
ggplot(aes(sow)) + geom_histogram(bins = 30),
ggplot(aes(industry)) + geom_bar(),
ggplot(aes(revenue)) + geom_histogram(bins = 30),
ggplot(aes(employees)) + geom_histogram(bins = 30),
)
grid.arrange(
ggplot(crm, aes(profit)) + geom_histogram(bins = 30),
ggplot(crm, aes(acq_exp)) + geom_histogram(bins = 30),
ggplot(crm, aes(ret_exp)) + geom_histogram(bins = 30),
ggplot(crm, aes(acq_exp_sq)) + geom_histogram(bins = 30),
ggplot(crm, aes(ret_exp_sq)) + geom_histogram(bins = 30),
ggplot(crm, aes(freq)) + geom_histogram(bins = 30),
ggplot(crm, aes(freq_sq)) + geom_histogram(bins = 30),
ggplot(crm, aes(crossbuy)) + geom_histogram(bins = 30),
ggplot(crm, aes(sow)) + geom_histogram(bins = 30),
ggplot(crm, aes(industry)) + geom_bar(),
ggplot(crm, aes(revenue)) + geom_histogram(bins = 30),
ggplot(crm, aes(employees)) + geom_histogram(bins = 30),
)
grid.arrange(
ggplot(crm, aes(profit)) + geom_histogram(bins = 30),
ggplot(crm, aes(acq_exp)) + geom_histogram(bins = 30),
ggplot(crm, aes(ret_exp)) + geom_histogram(bins = 30),
ggplot(crm, aes(acq_exp_sq)) + geom_histogram(bins = 30),
ggplot(crm, aes(ret_exp_sq)) + geom_histogram(bins = 30),
ggplot(crm, aes(freq)) + geom_histogram(bins = 30),
ggplot(crm, aes(freq_sq)) + geom_histogram(bins = 30),
ggplot(crm, aes(crossbuy)) + geom_histogram(bins = 30),
ggplot(crm, aes(sow)) + geom_histogram(bins = 30),
ggplot(crm, aes(industry)) + geom_bar(),
ggplot(crm, aes(revenue)) + geom_histogram(bins = 30),
ggplot(crm, aes(employees)) + geom_histogram(bins = 30)
)
grid.arrange(
ggplot(crm, aes(profit)) + geom_histogram(bins = 30),
ggplot(crm, aes(acq_exp)) + geom_histogram(bins = 30),
ggplot(crm, aes(ret_exp)) + geom_histogram(bins = 30),
ggplot(crm, aes(acq_exp_sq)) + geom_histogram(bins = 30),
ggplot(crm, aes(ret_exp_sq)) + geom_histogram(bins = 30),
ggplot(crm, aes(freq)) + geom_histogram(bins = 30),
ggplot(crm, aes(freq_sq)) + geom_histogram(bins = 30),
ggplot(crm, aes(crossbuy)) + geom_histogram(bins = 30),
ggplot(crm, aes(sow)) + geom_histogram(bins = 30),
ggplot(crm, aes(industry)) + geom_bar(),
ggplot(crm, aes(revenue)) + geom_histogram(bins = 30),
ggplot(crm, aes(employees)) + geom_histogram(bins = 30),
bottom = 'Figure X.X: Plots of predictor variables'
)
